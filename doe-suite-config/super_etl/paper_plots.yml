---

$SUITE_ID$:
  # TODO [nku] SET THE RUN IDS OF THE RESULTS
  model-small: "1725369940"
  model-mobilenet: "1725371439"
  model-vgg: "1725388515"
  #model-diffusion: "<PLACEHOLDER>"
  #model-gpt2: "<PLACEHOLDER>"
  cplink: "1725423229" # "1725379289" # TODO [nku] THIS WILL NEED TO BE REPLACED
  poly-ipa: "1725441369"



$ETL$:

  overview:
    experiments:
      model-small: "*"
      model-mobilenet: "*"
      cplink: "*"
      model-vgg: "*"
      poly-ipa: "*"
      # TODO [nku] add the other suites
    extractors:
      ErrorExpectedFileExtractor: {expected_file: ["output.csv"]}
      IgnoreExtractor: {file_regex: ["stdout.log"]}
      CsvExtractor: {file_regex: ["output.csv"]}
    transformers: []
    loaders:
      CsvSummaryLoader: {skip_empty: True}

  grid:
    experiments:
      model-small: "*"
      model-mobilenet: "*"
      model-vgg: "*"
      cplink: "*"
      poly-ipa: "*"
      # TODO [nku] add the other suites
    extractors:
      CsvExtractor: {file_regex: ["output.csv"]} # with default file_regex
      IgnoreExtractor: {file_regex: ["stdout.log", "stderr.log"]}
    transformers:
    - name: OsirisPreprocessTransformer
    - name: ResultFilterTransformer
    loaders:
      CsvSummaryLoader: {skip_empty: True}
      MyCustomColumnCrossPlotLoader:
        data_filter:
          allowed:
            model: [mnist, resnet18, dlrm, mobilenet, vgg, diffusion, gpt2]
            cpsnark: [no_com, poly, cp_link+, cp_link, poseidon]
            pc_type: [kzg, ipa]

        fig_foreach:
          cols: [$metrics$] # separate figure for prover and verifier
          # jp_except...

        subplot_grid:
          rows: [pc_type]
          cols: [model]
          share_y: none
          share_x: all
          kwargs:
            constrained_layout: True

        # define metrics (select the data columns)
        metrics:
          prover_time:
            value_cols: [prover_time_sec]
            #value_divider: 1.0
            #value_multiplier: 1.0
            unit_label: sec

          verifier_time:
            value_cols: [mean(verifier_time_ms)]
            error_cols: [stddev(verifier_time_ms)]
            #value_divider: 1.0
            #value_multiplier: 1.0
            unit_label: ms

        cum_plot_config:
        - legend_fig: {label: {template: "{cpsnark}"}, kwargs: {loc: "lower left", ncol: 5, bbox_to_anchor: [0.07, -0.07], columnspacing: 3.5,  fancybox: True}} # show a legend in figure where col1 == 'A'

        ########## Configure each Subplot:

        cum_subplot_config:

        - jp_query: (subplot_col_idx == `0` && pc_type == 'ipa')
          yaxis:
            #lim: {min: -0.9, max: 2.15}
            label: {template: "{pc_type} {$metrics$} [{$metric_unit$}]"}
            major_formatter: round_short
        - jp_query: (subplot_col_idx == `0` && pc_type == 'kzg')
          yaxis:
            label: {template: "{pc_type} {$metrics$} [{$metric_unit$}]"}
            major_formatter: round_short
        - jp_query: (subplot_row_idx == `0`)
          ax_title: {template: "{model}"}

        - jp_query: (pc_type == 'kzg')
          xaxis:
            tick_params:
            - {axis: x, which: both, labelsize: 8}
            - {axis: x, which: major, pad: 10}
          chart:
            bar_foreach:
              cols: [cpsnark]
              label: {template: ""}
              #jp_except: "(cpsnark == 'cp_link+') || (cpsnark == 'cp_link')"

        - jp_query: (pc_type == 'ipa')
          #yaxis:
          #  lim: {min: -0.9, max: 2.15}
          xaxis:
            tick_params:
            - {axis: x, which: both, labelsize: 8}
            - {axis: x, which: major, pad: 10}
          chart:
            bar_foreach:
              cols: [cpsnark]
              label: {template: ""}
              #jp_except: "(cpsnark == 'cp_link+') || (cpsnark == 'cp_link')"


          ###### Configure each element (artist) in subfigure (ax)
        - cum_artist_config:
          # colors from: https://davidmathlogic.com/colorblind/#%23000000-%23E69F00-%2356B4E9-%23009E73-%23F0E442-%230072B2-%23D55E00-%23CC79A7
          - color: "#D8D7D2" # "#000000"
            jp_query: starts_with(cpsnark, 'no_com')
          - color: "#009E73" #"#D55E00"
            jp_query: starts_with(cpsnark, 'cp_link+')
          - color: "#99d8c7" # "#F0E442" #E69F00" # "#E69F00"
            jp_query: starts_with(cpsnark, 'cp_link')
          - color: "#0072B2" # "#009E73"
            jp_query: starts_with(cpsnark, 'poly')
          - color: "#D55E00" # "#56B4E9" #
            jp_query: starts_with(cpsnark, 'poseidon')
          - edgecolor: black
            linewidth: 2
            zorder: 10000
            jp_query: starts_with(cpsnark, 'cp_link+') || starts_with(cpsnark, 'poly')
          label_map:
            no_com: No commitment
            cp_link: CPLink
            cp_link+: CPLink+ (Ours)
            poly: Polynomial (Ours)
            poseidon: Poseidon

            mnist: MNIST~10k
            snet: SNET~100k
            resnet18: ResNet18~280k
            dlrm: DLRM~750k
            mobilenet: MOBILENET~3.5m
            vgg: VGG~15m
            gpt2: GPT2~81m
            diffusion: DIFFUSION~19.5m

            kzg: KZG
            ipa: IPA

            prover_time: Prover
            verifier_time: Verifier
